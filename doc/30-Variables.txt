Variables
=========

Flexible variable declaration and propagation is the heart of the
FileWiki system.  While some variables affect the FileWiki system,
they are basically used as input to the template processor. Every page
merges its `vars` from various locations (see
[Propagation](#propagation) below).


Declaration
-----------

Variables are declared in a simple "key=value" or "key value"
format. Variable expansion is performed in occurrence of either
`$myvar`, `${myvar}`, or `${{myvar}}` (late expansion).

- Lines starting with '#' (hash) are ignored
- Trailing whitespaces are cut off
- Values can be quoted

  [system variables]: system_variables.html

Example:

    title=Summary
    menu=$title

This results in both "title" and "menu" variables to have the value
"Summary". This is equivalent to:

    title  "Summary"
    menu   $title


Propagation
-----------

#### tree vars

Parsed from file "tree.vars" in every directory.

`tree.vars` are propagated to `dir.vars` and `page.vars`, and are
persistent within sub-directories. In sub-directories, they supersede
the `tree.vars` of the parent directory.


#### dir vars

Parsed from file "dir.vars" in every directory.

Used for the directory node. Consider the `dir.vars` as metadata for the
directory they are located in.  `dir.vars` are not propagated, but are
accessible on a page via the `DIR` variable.


#### page vars

Parsed from file "&lt;source_file&gt;.vars".

`page.vars` supersede the `tree.vars` for a page.  Consider the
`page.vars` as metadata for a page. Every source page can have
`page.vars`.


#### nested vars

Parsed from within source files.

Nested vars supersede the `page.vars`. FileWiki starts to parse nested
variables from the source file after it first encounters a line
starting with `<filewiki_vars>` or `[filewiki_vars]`, up to
`</filewiki_vars>` or `[/filewiki_vars]`.

Note that the `nested.vars` are stripped off the source file when
processing the input filters.

Example:

    Page text...

    <filewiki_vars>
    key=value
    ...
    </filewiki_vars>

    Page text...

As a special feature for pages which are also parsed outside FileWiki
(e.g. perl modules), a "comment" character is defined by the first
character preceding <code>&lt;filewiki_vars&gt;</code>.

Example (equivalent to example above):

    File text (e.g. Perl code)...
    #<filewiki_vars>
    #key=value
    #...
    #</filewiki_vars>
    File text...

In this example, the "comment" character is set to '#', and all
variables are parsed.


Variable Substitution
---------------------

###Early Expansion

Variable early expansion happens directly at the time the key/value
line is read from disk. This is the normal usecase when propagating
variables through directories.

Early expansion for expressions is accepted in form:

  - `$KEY`: expand to the value of variable `KEY`, or ""
    if `KEY` is not found.

  - `${KEY_EXPR[:MATCH_EXPR]}` : expand to `$1` of the match
    expression applied to the value of `KEY_EXPR`, where `KEY_EXPR` is
    an expression in form `KEY0[|KEY1...]`, returning the first valid
    value from KEYn.

Examples:

    OUTPUT_DIR     /tmp/filewiki/htdocs
    URI_PREFIX     $OUTPUT_DIR
    stylesheet     $URI_PREFIX/filewiki.css


###Late Expansion

Variable late expansion happens after all variables are read by a page
or directory node. This is particulary useful if you want to define a
variable derived from internal variables set by plugins.

Late expansion for expressions is accepted in form:`${{KEY_EXPR[:MATCH_EXPR]}}`.

Example

    commit_msg     This page was committed by: ${{GIT_AUTHOR_NAME}}.
    date_tag       ${{NAME:^(\d\d\d\d-\d\d-\d\d)-}}

For files named like "yyyy-mm-dd-myfile", this sets a variable
`date_tag` from the source file name.


###Logical Expressions

Expressions in form `$((...))` are executed at late expansion time.

Logical expressions are accepted in form:

  - `$(( EXPR0 || EXPR1 || ... ))`: expand to the value of expression
    `EXPR0`, or `EXPR1`...

Example

    original_date=$(( ${{GALLERY_TIME:(\S+)\s+\S+}} || ${{NAME:^(\d\d\d\d-\d\d-\d\d)-}} ))

Sets variable `original_date` from GALLERY_TIME, falling back to the date
prefix of NAME.

