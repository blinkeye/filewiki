System Variables
================

This chapter lists all variables interpreted or produced by FileWiki.
Note that these variables are in capital letters, in order to
distinguish them from the user-defined variables.


Configuration Variables
-----------------------

The variables described here directly affect the FileWiki behaviour.


###BASEDIR

Mandatory. Points to the top-level directory of the website. This must
be set as function parameter to the FileWiki calls.


###OUTPUT_DIR

Target (output) directory of the website. Mandatory for the
`FileWiki::create()` function. Absolute as well as relative paths are
allowed.

NOTE: The given directory as well as all subdirectories will be
created on the fly, without checking or user inerraction. Make sure that
you provide a reasonable value here.

Example:

    OUTPUT_DIR=/tmp/filewiki/${BUILD_TIME}


###TARGET_MTIME

Format: "YYYY-MM-DD hh:mm:ss"

If set, affects modification date for the target (output) file of a
page.

This is particulary useful if you use rsync -t for installing the
site, and you don't want a page's mdate to change on every install.


###TEMPLATE

Mandatory. Template to be parsed for the page. Relative to
`TT_INCLUDE_PATH`.


###TT_*

Set configuration options for [Template Toolkit]. See
[Template::Manual::Config] for a complete list of options.

Make sure the `INCLUDE_PATH` points to your template directory.

For the FileWiki apache handler to work correctly, you also need to
set `ABSOLUTE=1`.

Example:

    TT_INCLUDE_PATH=${BASEDIR}/template
    TT_ABSOLUTE=1


  [template toolkit]: http://template-toolkit.org/index.html
  [Template::Manual::Config]: http://search.cpan.org/~abw/Template-Toolkit/lib/Template/Manual/Config.pod


###CMD_*

Command being executed by `FileWiki::command($command)` function.

Example:

    CMD_INSTALL=rsync -rvz --delete -e "ssh -l webmaster" ${OUTPUT_DIR}/ www.example.org:/var/www/htdocs

This installs the page to the host www.example.org when typing:

    filewiki -c install example.org


###URI_PREFIX

Prefix for the URI's generated by FileWiki. Useful if the website
generated is in a subdirectory within some other site.


###URI_DIR

Set the root URI to a new value. This will make the source directory
(as well all including files and folders recursively) appear under a
new root URI.

NOTE: Set this in `dir.vars`. You will get unexpected result when set
in `tree.vars`!


###URI_TRANSFORM_LC

If set, convert all URI's to lowercase.


###RAW_COPY

Comma separated list of file endings. Source files matching these file
endings will be copied unmodified to the target directory.

Example:

    RAW_COPY=css,png,jpg,jpeg


###TIME_FORMAT

Defines how time is formatted in the system. They correspond to the C
library routines "strftime" and "ctime".  Defaults to "%C".

Example:

    TIME_FORMAT=%B %e, %Y

Result: "January  1, 2011"


###SKIP

If set in `dir.vars` or `tree.vars`, files as well as subdirectories
will not be processed.  If set in `page.vars`, the page will not be
processed.


###INDEX

Specifies the order of the page within the current directory. Defaults
to NAME.

Important when creating menues using the `PageTree()` or `PageList()`
functions in the templates.

Note that the index is being sorted lexically (NOT numerically): This
means for example that "10" is considered smaller than "2". You should
use "02" here.


###REF

Comma separated list of references to the page URI. Used by the HTML
converter (Markdown or Textile) to create links from a reference.

Only useful in `page.vars`.


###SORT_KEY

Key to use for sorting pages within a directory. Defaults to "INDEX".


###SORT_STRATEGY

Strategy to use for sorting pages within a directory. Supported values
are:

- `sortkey-only`: (default) sort by SORT_KEY.
- `dir-first`: sort by SORT_KEY, but put directories in front.
- `dir-last`: sort by SORT_KEY, but push directories to back.


###SORT_ORDER

Order to use for sorting pages within a directory. Supported values
are:

- `asc`: (default) sort ascending.
- `desc`: sort descending.


###INCLUDE

Include files/directories. Optionally, you can specify a prefix from
where to read additional tree-, page- and file-vars can be defined in
square brackets.
Example

    INCLUDE=/my/include/directory[mydir]:/my/other/include_dir

This includes the directories specified. The `tree.vars` will be read
from `mydir.tree.vars` in the current directory (Same applies for
`dir.vars` and `file.vars`). The vars from subdirectories will be
read from `mydir_subdir.tree.vars`.


Presets
-------

The variables described here are set by FileWiki, and can be used in
the templates.

###NAME

The name of the page (or directory respectively). This is taken from
the filename.


###ENV

System environmnent (reference of Perl %ENV).


###MTIME

Modification date, taken from the source file modification date, and
formatted using the `TIME_FORMAT` variable.


###BUILD_TIME

Date of the generation of a page. This is set to the systems current
date upon page generation, and formatted using the `TIME_FORMAT`
variable.


###PAGE_PREV

Points to the previous page in current directory. Not set if current
page is first page.


###PAGE_NEXT

Points to the next page in current directory. Not set if current page
is last page.


###DIR

Container for the `dir.vars`. Makes the `dir.vars` accessible from the
page.

Template Example:

    [% DIR.my_var %]

Returns the variable `my_var` from `dir.vars`.
